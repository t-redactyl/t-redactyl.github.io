ggtitle("Sample distribution of page views over 30 days") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
g5
g6 <- ggplot(data=resample_frame, aes(resample_frame$n1)) +
geom_histogram(aes(y = ..density..),
binwidth = 5, fill = barfill, colour = barlines) +
xlab("Sample heights") +
ylab("Density") +
theme_bw() +
ggtitle("Sample 1") +
theme(plot.title = element_text(lineheight=1.1, face="bold"))
mean1 <- data.frame(Means="Theoretical mean", vals = 220)
mean2 <- data.frame(Means="Sample mean", vals = mean(resample_frame$n1))
means <- rbind(mean1, mean2)
g6 <- g6 + geom_vline(data=means, aes(xintercept=vals, linetype = Means,
colour = Means), size = 1, show_guide = TRUE) +
scale_color_manual(values=c("Theoretical mean" = line1, "Sample mean" = line2)) +
theme(legend.position="none")
g6
mean(sample_frame)
mean(mn_vector)
sd(mn_vector)
set.seed(567)
mn_vector <- NULL
resample_frame <- data.frame(row.names = seq(from = 1, to = 30, by = 1))
for (i in 1 : 1000) {
s <- sample(sample, 30, replace = TRUE)
resample_frame <- cbind(resample_frame, s)
mn_vector <- c(mn_vector, mean(s))
}
names(resample_frame) <- paste0("n", seq(from = 1, to = 1000, by = 1))
mean(mn_vector)
sd(mn_vector)
rm(list = ls())         # Clear the workspace
set.seed(567)           # Set seed to replicate random variable generation
mn_vector <- NULL      # Generate the median of each sample and store in a vector
sample_frame <- data.frame(row.names = seq(from = 1, to = 30, by = 1))
for (i in 1 : 1000) {
s <- rpois(30, lambda = 220)
sample_frame <- cbind(sample_frame, s)
mn_vector <- c(mn_vector, mean(s))
}
names(sample_frame) <- paste0("n", seq(from = 1, to = 1000, by = 1))
mean(mn_vector)
sd(mn_vector)
rm(list = ls())         # Clear the workspace
set.seed(567)           # Set seed to replicate random variable generation
mn_vector <- NULL      # Generate the median of each sample and store in a vector
sample_frame <- data.frame(row.names = seq(from = 1, to = 30, by = 1))
for (i in 1 : 1000) {
s <- rpois(30, lambda = 220)
sample_frame <- cbind(sample_frame, s)
mn_vector <- c(mn_vector, mean(s))
}
names(sample_frame) <- paste0("n", seq(from = 1, to = 1000, by = 1))
require(ggplot2); require(gridExtra)
barfill <- "#6baed6"
barlines <- "#2171b5"
line1 <- "black"
line2 <- "#FF0000"
g1 <- ggplot(data=sample_frame, aes(sample_frame$n1)) +
geom_histogram(aes(y = ..density..),
binwidth = 4, fill = barfill, colour = barlines) +
xlab("Sample heights") +
ylab("Density") +
theme_bw() +
ggtitle("Sample 1") +
theme(plot.title = element_text(lineheight=1.1, face="bold"))
mean1 <- data.frame(Means="Theoretical mean", vals = 220)
mean2 <- data.frame(Means="Sample mean", vals = mean(sample_frame$n1))
means <- rbind(mean1, mean2)
g1 <- g1 + geom_vline(data=means, aes(xintercept=vals, linetype = Means,
colour = Means), size = 1, show_guide = TRUE) +
scale_color_manual(values=c("Theoretical mean" = line1, "Sample mean" = line2)) +
theme(legend.position="none")
g2 <- ggplot(data=sample_frame, aes(sample_frame$n2)) +
geom_histogram(aes(y = ..density..),
binwidth = 4, fill = barfill, colour = barlines) +
xlab("Sample heights") +
ylab("Density") +
theme_bw() +
ggtitle("Sample 2") +
theme(plot.title = element_text(lineheight=1.1, face="bold"))
mean1 <- data.frame(Means="Theoretical mean", vals = 220)
mean2 <- data.frame(Means="Sample mean", vals = mean(sample_frame$n2))
means <- rbind(mean1, mean2)
g2 <- g2 + geom_vline(data=means, aes(xintercept=vals, linetype = Means,
colour = Means), size = 1, show_guide = TRUE) +
scale_color_manual(values=c("Theoretical mean" = line1, "Sample mean" = line2)) +
theme(legend.position="none")
grid.arrange(g1, g2, nrow = 1, ncol = 2)
g3 <- ggplot(data=as.data.frame(mn_vector), aes(mn_vector)) +
geom_histogram(aes(y = ..density..), binwidth = 1,
col = barlines,
fill = barfill) +
xlab("Mean of each sample") +
ylab("Density") +
theme_bw() +
ggtitle("Distribution of Means of 1,000 Samples") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
geom_line(aes(y = ..density.., colour = "Empirical"), stat = "density") +
stat_function(fun = dnorm, aes(colour = "Normal"),
arg = list(mean = 220, sd = sd(mn_vector))) +
scale_colour_manual(name = "Density", values = c(line1, line2))
print(g3)
g4 <- ggplot(data=as.data.frame(mn_vector), aes(mn_vector)) +
geom_histogram(aes(y = ..density..), binwidth = 1,
col = barlines,
fill = barfill) +
xlab("Mean of each sample") +
ylab("Density") +
theme_bw() +
ggtitle("Distribution of Means of 1,000 Samples") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
sem1 <- data.frame(SEMs="+/- 1 SEM",
vals = c(mean(mn_vector) - sd(mn_vector),
mean(mn_vector) + sd(mn_vector)))
sem2 <- data.frame(SEMs="+/- 2 SEMs",
vals = c(mean(mn_vector) - 2 * sd(mn_vector),
mean(mn_vector) + 2 * sd(mn_vector)))
sems <- rbind(sem1, sem2)
g4 <- g4 + geom_vline(data=sems, aes(xintercept=vals, linetype = SEMs,
colour = SEMs), size = 1, show_guide = TRUE) +
scale_color_manual(values=c("+/- 1 SEM" = line1,
"+/- 2 SEMs" = line1))
print(g4)
set.seed(567)
sample <- rpois(30, lambda = 220)
g5 <- ggplot(data=as.data.frame(sample), aes(sample)) +
geom_histogram(aes(y = ..density..), binwidth = 6,
col = barlines,
fill = barfill) +
xlab("Number of page views per day") +
ylab("Density") +
theme_bw() +
ggtitle("Sample distribution of page views over 30 days") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
print(g5)
set.seed(567)
r_mn_vector <- NULL
resample_frame <- data.frame(row.names = seq(from = 1, to = 30, by = 1))
for (i in 1 : 1000) {
s <- sample(sample, 30, replace = TRUE)
resample_frame <- cbind(resample_frame, s)
r_mn_vector <- c(r_mn_vector, mean(s))
}
names(resample_frame) <- paste0("n", seq(from = 1, to = 1000, by = 1))
mean(mn_vector)
mean(r_mn_vector)
sd(mn_vector)
sd(r_mn_vector)
g8 <- ggplot(data=as.data.frame(r_mn_vector), aes(r_mn_vector)) +
geom_histogram(aes(y = ..density..), binwidth = 1,
col = barlines,
fill = barfill) +
xlab("Mean of each bootstrapped sample") +
ylab("Density") +
theme_bw() +
ggtitle("Distribution of Means of 1,000 Bootstrapped Samples") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
sem1 <- data.frame(SEMs="+/- 1 SEM",
vals = c(mean(mn_vector) - sd(mn_vector),
mean(mn_vector) + sd(mn_vector)))
sem2 <- data.frame(SEMs="+/- 2 SEMs",
vals = c(mean(mn_vector) - 2 * sd(mn_vector),
mean(mn_vector) + 2 * sd(mn_vector)))
sems <- rbind(sem1, sem2)
g8 <- g8 + geom_vline(data=sems, aes(xintercept=vals, linetype = SEMs,
colour = SEMs), size = 1, show_guide = TRUE) +
scale_color_manual(values=c("+/- 1 SEM" = line1,
"+/- 2 SEMs" = line1))
print(g8)
g8 <- ggplot(data=as.data.frame(r_mn_vector), aes(r_mn_vector)) +
geom_histogram(aes(y = ..density..), binwidth = 1,
col = barlines,
fill = barfill) +
xlab("Mean of each sample") +
ylab("Density") +
theme_bw() +
ggtitle("Distribution of Means of 1,000 Samples") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
geom_line(aes(y = ..density.., colour = "Empirical"), stat = "density") +
stat_function(fun = dnorm, aes(colour = "Normal"),
arg = list(mean = 220, sd = sd(mn_vector))) +
scale_colour_manual(name = "Density", values = c(line1, line2))
print(g8)
g8 <- ggplot(data=as.data.frame(r_mn_vector), aes(r_mn_vector)) +
geom_histogram(aes(y = ..density..), binwidth = 1,
col = barlines,
fill = barfill) +
xlab("Mean of each sample") +
ylab("Density") +
theme_bw() +
ggtitle("Distribution of Means of 1,000 Samples") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
geom_line(aes(y = ..density.., colour = "Empirical"), stat = "density") +
stat_function(fun = dnorm, aes(colour = "Normal"),
arg = list(mean = 220, sd = sd(mn_vector))) +
scale_colour_manual(name = "Density", values = c(line1, line2))
g9 <- ggplot(data=as.data.frame(r_mn_vector), aes(r_mn_vector)) +
geom_histogram(aes(y = ..density..), binwidth = 1,
col = barlines,
fill = barfill) +
xlab("Mean of each sample") +
ylab("Density") +
theme_bw() +
ggtitle("Distribution of Means of 1,000 Samples") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
sem1 <- data.frame(SEMs="+/- 1 SEM",
vals = c(mean(mn_vector) - sd(mn_vector),
mean(mn_vector) + sd(mn_vector)))
sem2 <- data.frame(SEMs="+/- 2 SEMs",
vals = c(mean(mn_vector) - 2 * sd(mn_vector),
mean(mn_vector) + 2 * sd(mn_vector)))
sems <- rbind(sem1, sem2)
g9 <- g9 + geom_vline(data=sems, aes(xintercept=vals, linetype = SEMs,
colour = SEMs), size = 1, show_guide = TRUE) +
scale_color_manual(values=c("+/- 1 SEM" = line1,
"+/- 2 SEMs" = line1))
grid.arrange(g8, g9, nrow = 1, ncol = 2)
sd(sample)
sd(sample) / sqrt(30)
summary(sample)
sample_outlier <- c(sample, 300)
sample_outlier <- c(sample, 330)
sample_no_outlier <- c(sample, 221)
sem_outlier <- sd(sample_outlier) / sqrt(31)
sem_no_outlier <- sd(sample_no_outlier) / sqrt(31)
mean(sample_outlier)
mean(sample_no_outlier)
sem_outlier
sem_no_outlier
set.seed(567)
r_mn_vector <- NULL
for (i in 1 : 1000) {
s <- sample(sample_outlier, 30, replace = TRUE)
r_mn_vector <- c(r_mn_vector, mean(s))
}
sd(r_mn_vector)
set.seed(567)
r_mn_vector <- NULL
for (i in 1 : 10000) {
s <- sample(sample_outlier, 30, replace = TRUE)
r_mn_vector <- c(r_mn_vector, mean(s))
}
sd(r_mn_vector)
sample_outlier <- c(sample, 300)
sample_no_outlier <- c(sample, 221)
sem_outlier <- sd(sample_outlier) / sqrt(31)
sem_no_outlier <- sd(sample_no_outlier) / sqrt(31)
sem_outlier
set.seed(567)
r_mn_vector <- NULL
for (i in 1 : 10000) {
s <- sample(sample_outlier, 30, replace = TRUE)
r_mn_vector <- c(r_mn_vector, mean(s))
}
sd(r_mn_vector)
install.packages("boot")
library(boot)
rm(list = ls())
df <- boot(melanoma)
df <- boot.melanoma
df <- melanoma
View(df)
rm(list = ls())
help(boot)
stat<-function(x,i){mean(x[i])}
boot.out<-boot(data=sample_outlier, statistic=stat, R=1000)
set.seed(567)
r_mn_vector <- NULL
resample_frame <- data.frame(row.names = seq(from = 1, to = 30, by = 1))
for (i in 1 : 1000) {
s <- sample(sample, 30, replace = TRUE)
resample_frame <- cbind(resample_frame, s)
r_mn_vector <- c(r_mn_vector, mean(s))
}
names(resample_frame) <- paste0("n", seq(from = 1, to = 1000, by = 1))
set.seed(567)
sample <- rpois(30, lambda = 220)
sample_outlier <- c(sample, 300)
sample_no_outlier <- c(sample, 221)
stat<-function(x,i){mean(x[i])}
boot.out<-boot(data=sample_outlier, statistic=stat, R=1000)
boot.ci(boot.out)
help("boot")
boot.ci(boot.out, conf = 0.68)
stat<-function(x,i){mean(x[i])}
boot.out<-boot(data=sample_no_outlier, statistic=stat, R=1000)
boot.ci(boot.out, conf = 0.68)
sem_outlier <- sd(sample_outlier) / sqrt(31)
mean(sample_outlier) + c(-1, 1) * sem_outlier
hist(sample_outlier)
hist(sample_outlier)
sample1 <- rpois(30, lambda = 220)
sample1 <- c(rpois(29, lambda = 220), 260)
sample2 <- c(rpois(9, lambda = 220), 260)
mean(sample1)
mean(sample2)
sample2 <- c(rpois(9, lambda = 220), 260)
mean(sample2)
set.seed(567)
sample1 <- c(rpois(29, lambda = 220), 260)
sample2 <- c(rpois(9, lambda = 220), 260)
set.seed(567)
sample1 <- c(rpois(29, lambda = 220), 260)
sample2 <- c(rpois(9, lambda = 220), 260)
mean(sample2)
mean(sample1)
help(render_jekyll)
library(knitr)
help(render_jekyll)
days <- seq(from = 1, to = 365, by = 1)
install.packages("magrittr")
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
install.packages("babynames")
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
lambda <- 220 %>%
n <- 30 %>%
sem <- sqrt(lambda / n)
lambda <- 220 %>%
n <- 30 %>%
sem <- sqrt(lambda / n)
rm(list = ls())
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Jod")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Jo")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
babynames %>%
filter(name %>% substr(1, 5) %>% equals("Jodie")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
babynames %>%
filter(name %>% substr(1, 2) %>% equals("Jo")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
download.file("http://d396qusza40orc.cloudfront.net/repdata/data/activity.zip", "activity.zip") %>%
unzip()
download.file("http://d396qusza40orc.cloudfront.net/repdata/data/activity.zip", "activity.zip") %>%
unzip("activity.zip") %>%
read.csv("activity.csv") %>%
as.integer(is.na(steps))
getwd
getwd()
unzip("activity.zip") %>%
read.csv("activity.csv") %>%
as.integer(is.na(steps))
download.file("http://d396qusza40orc.cloudfront.net/repdata/data/activity.zip", "activity.zip")
unzip("activity.zip")
data <- read.csv("activity.csv")
data %>%
as.integer(is.na(steps))
attach(data) %>%
as.integer(is.na(steps))
detach(data)
data(iris)
iris
View(iris)
head(babynames)
colnames(iris)
help("group_by")
bySpec <- group_by(iris,Species)
iris
data(iris)
colnames(iris)
iris <- mutate(iris, n = 1)
bySpec <- group_by(iris,Species)
help(summari)
help("summarize")
help(total)
help(sum)
data(iris)
iris <- mutate(iris, n = 1)
bySpec <- group_by(iris,Species)
sumSpec <- summarize(bySpec,count=sum(n))
View(sumSpec)
colnames(iris)
data(iris)
iris <- mutate(iris, n = 1)
bySpec <- group_by(iris,Species)
sumSpec <- summarize(bySpec,
mn.Petal.Width = mean(Petal.Width),
mn.Sepal.Width = mean(Sepal.Width))
View(sumSpec)
help(qplot)
View(sumSpec)
help("reshape")
longSumSpec <- melt(sumSpec, id.vars = Species)
install.packages(reshape2)
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
needed_packages <- c("babynames", "dplyr")
if (!needed_packages %in% installed.packages()) install.packages(needed_packages)
help("install.packages")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage
packages <- c("babynames", "dplyr", "plyr", "magrittr", "ggplot2", "reshape2")
ipak(packages)
require(ggplot2)
qplot(days, page.views, data = views, geom = "line") %>%
add(geom_line(colour = "#546603")) %>%
add(ggtitle('Website Page Views in 2014')) %>%
add(xlab('')) %>%
add(ylab('Daily page views')) %>%
print
days <- seq(as.Date("2014/1/1"), as.Date("2014/12/31"), "days")
page.views <- rpois(365, lambda = 220)
views <- data.frame(days, page.views)
# Generate post Christmas sale peak period (January 1-10) with mean page views of 400 per day.
views$page.views[views$days >= "2014/01/01" & views$days <= "2014/01/10"] <- rpois(10, lambda = 400)
# Generate Easter peak period (April 1-21) with mean page views of 350 per day.
views$page.views[views$days >= "2014/04/01" & views$days <= "2014/04/21"] <- rpois(21, lambda = 350)
# Generate Black Friday and Christmas peak periods (November 28-December 31) mean page views of 500 per day.
views$page.views[views$days >= "2014/11/28" & views$days <= "2014/12/31"] <- rpois(34, lambda = 500)
qplot(days, page.views, data = views, geom = "line") %>%
add(geom_line(colour = "#546603")) %>%
add(ggtitle('Website Page Views in 2014')) %>%
add(xlab('')) %>%
add(ylab('Daily page views')) %>%
print
require(dygraphs); require(xts); require(magrittr)
qplot(days, page.views, data = views, geom = "line") %>%
add(geom_line(colour = "#546603")) %>%
add(ggtitle('Website Page Views in 2014')) %>%
add(xlab('')) %>%
add(ylab('Daily page views')) %>%
print
qplot(days, page.views, data = views, geom = "line") %>%
add(geom_line(colour = "#546603")) %>%
add(ggtitle('Website Page Views in 2014')) %>%
add(xlab('')) %>%
add(ylab('Daily page views')) %>%
add(theme_bw())
print
qplot(days, page.views, data = views, geom = "line") %>%
add(geom_line(colour = "#546603")) %>%
add(ggtitle('Website Page Views in 2014')) %>%
add(xlab('')) %>%
add(ylab('Daily page views')) %>%
add(geom_hline(yintercept=220, linetype="dashed")) %>%
add(theme_bw())
require(knitr)
knit("/Users/jburchell/Documents/Blog-posts/2015-09-15-Representative Sampling.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-15-Representative-Sampling.markdown")
setwd("/Users/jburchell/octopress/source")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-15-Representative Sampling.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-15-Representative-Sampling.markdown")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-15-Representative Sampling.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-15-Representative-Sampling.markdown")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-15-Representative Sampling.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-15-Representative-Sampling.markdown")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-15-Representative Sampling.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-15-Representative-Sampling.markdown")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-15-Representative Sampling.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-15-Representative-Sampling.markdown")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-15-Representative Sampling.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-15-Representative-Sampling.markdown")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-15-Representative Sampling.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-15-Representative-Sampling.markdown")
help(opts_chunk)
knit("/Users/jburchell/Documents/Blog-posts/2015-09-15-Representative Sampling.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-15-Representative-Sampling.markdown")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-15-Representative Sampling.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-15-Representative-Sampling.markdown")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-15-Representative Sampling.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-15-Representative-Sampling.markdown")
getwd()
knit("/Users/jburchell/Documents/Blog-posts/2015-09-15-Representative Sampling.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-15-Representative-Sampling.markdown")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-22-2015-09-22-A Gentle Introduction to Permutation Tests.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-15-2015-09-22-A-Gentle-Introduction-to-Permutation-Tests.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-22-A Gentle Introduction to Permutation Tests.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-22-A-Gentle-Introduction-to-Permutation-Tests.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-08-A_Gentle_Introduction_to_Bootstrapping.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-08-A-Gentle-Introduction-to-Bootstrapping.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-08-A Gentle Introduction to Bootstrapping.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-08-A-Gentle-Introduction-to-Bootstrapping.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-08-A Gentle Introduction to Bootstrapping.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-08-A-Gentle-Introduction-to-Bootstrapping.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-09-22-A Gentle Introduction to Permutation Tests.Rmd", output = "/Users/jburchell/octopress/source/_posts/2015-09-22-A-Gentle-Introduction-to-Permutation-Tests.md")
